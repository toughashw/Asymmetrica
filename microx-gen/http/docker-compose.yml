services:
  certbot:
    container_name: certbot
    image: certbot/certbot
    user: '1000'
    volumes:
    - ./certbot/conf:/etc/letsencrypt:rw
    - ./certbot/work:/var/lib/letsencrypt:rw
    - ./certbot/logs:/var/log/letsencrypt:rw
    - ./certbot/www:/var/www/certbot:rw
  dashboard-backend:
    container_name: dashboard-backend
    depends_on:
      dashboarddb:
        condition: service_started
    image: disitlab/dashboard-backend:v1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    restart: unless-stopped
    volumes:
    - ./dashboard-backend-conf/config.properties:/usr/app/config.properties:rw
  dashboard-builder:
    container_name: dashboard-builder
    depends_on:
      dashboarddb:
        condition: service_started
      keycloak:
        condition: service_started
    environment:
      HEATMAP_DB_HOST: dashboarddb
      HEATMAP_DB_PASSWORD: PxRg90yqIflxfWt5
      HEATMAP_DB_USER: user
      OWN_DB_HOST: dashboarddb
      OWN_DB_PWD: PxRg90yqIflxfWt5
      OWN_DB_USER: user
      OWN_LDAPBASEDN: dc=ldap,dc=organization,dc=com
      OWN_LDAPSERVER: ldap-server
      OWN_SSO_USERINFO_ENDPOINT: http://dashboard/auth/realms/master/protocol/openid-connect/userinfo
    image: disitlab/dashboard-builder:v7.1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 70
      target: 80
    restart: unless-stopped
    volumes:
    - ./apache-proxy.conf:/etc/apache2/conf-virtualhost/proxy.conf:rw
    - ./ownership-conf/logs:/ownership-logs:rw
    - ./iot-directory-certificate:/var/www/certificate:rw
    - ./multiservicemap-conf:/var/www/html/MultiServiceMap/conf:rw
    - ./dashboard-builder-conf:/var/www/html/dashboardSmartCity/conf:rw
    - dashboard-img:/var/www/html/dashboardSmartCity/img:rw
    - ./iot-directory-conf:/var/www/html/iot-directory/conf:rw
    - ./notificator-conf:/var/www/html/notificator/conf:rw
    - ./ownership-conf/config.php:/var/www/html/ownership-api/config.php:rw
    - datatable-uploads:/var/www/html/processloader/DataTableManager/files:rw
    - poitable-uploads:/var/www/html/processloader/POIManager/files:rw
    - ./processloader-conf/config.php:/var/www/html/processloader/config.php:rw
    - ./processloader-conf/datatablemanager_config.ini.php:/var/www/html/processloader/datatablemanager_config.ini.php:rw
    - ./processloader-conf/external_service.php:/var/www/html/processloader/external_service.php:rw
    - ./processloader-conf/poimanager_config.ini.php:/var/www/html/processloader/poimanager_config.ini.php:rw
    - ./iot-directory-log:/var/www/log:rw
  dashboard-cron:
    command: /bin/sh -c "crontab /crontab; cron -f"
    container_name: dashboard-cron
    image: disitlab/dashboard-builder:v7.1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    restart: unless-stopped
    user: root
    volumes:
    - ./dashboard-cron-conf/crontab:/crontab:rw
    - ./dashboard-builder-conf:/var/www/html/dashboardSmartCity/conf:rw
  dashboarddb:
    container_name: dashboarddb
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_DATABASE: Dashboard
      MYSQL_PASSWORD: PxRg90yqIflxfWt5
      MYSQL_ROOT_PASSWORD: JrquK867oJbIdsJt
      MYSQL_USER: user
      TZ: Europe/Rome
    image: mariadb:10.3
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 3306
      target: 3306
    restart: unless-stopped
    volumes:
    - ./database:/database:rw
    - ./database/dashboard.sql:/docker-entrypoint-initdb.d/0_init.sql:rw
    - ./database/dashboard-wizard-min.sql:/docker-entrypoint-initdb.d/1_init.sql:rw
    - ./database/dashboard-menu.sql:/docker-entrypoint-initdb.d/2_init.sql:rw
    - ./database/dashboard-mobmenu.sql:/docker-entrypoint-initdb.d/3_init.sql:rw
    - ./database/profiledb.sql:/docker-entrypoint-initdb.d/4_init.sql:rw
    - ./database/notificator.sql:/docker-entrypoint-initdb.d/5_init.sql:rw
    - ./database/iot-directory.sql:/docker-entrypoint-initdb.d/6_init.sql:rw
    - ./database/servicemap.sql:/docker-entrypoint-initdb.d/7_init.sql:rw
    - ./database/superservicemap.sql:/docker-entrypoint-initdb.d/8_init.sql:rw
    - ./database/processloader.sql:/docker-entrypoint-initdb.d/9_init.sql:rw
    - ./database/heatmap.sql:/docker-entrypoint-initdb.d/a_init.sql:rw
    - ./database/datatable.sql:/docker-entrypoint-initdb.d/b_init.sql:rw
    - ./database/devicehealth.sql:/docker-entrypoint-initdb.d/c_init.sql:rw
    - ./database/preconfig.sql:/docker-entrypoint-initdb.d/z_init.sql:rw
    - ./mariadb-conf:/etc/mysql/mariadb.conf.d:rw
    - dashboarddb:/var/lib/mysql:rw
  geoserver:
    container_name: geoserver
    depends_on:
      geoserver-db:
        condition: service_healthy
    environment:
      GEOSERVER_ADMIN_PASSWORD: uAYMBz1hjSjlWGgc
      GEOSERVER_ADMIN_USER: admin
      GEOSERVER_DATA_DIR: /opt/geoserver/data_dir
      GEOWEBCACHE_CACHE_DIR: /opt/geoserver/data_dir/gwc
      HOST: geoserver-db
      INITIAL_MEMORY: 2G
      MAXIMUM_MEMORY: 4G
      POSTGRES_DB: gis
      POSTGRES_JNDI: "TRUE"
      POSTGRES_PASS: uAYMBz1hjSjlWGgc
      POSTGRES_USER: admin
    image: kartoza/geoserver:2.20.0
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8600
      target: 8080
    restart: unless-stopped
    volumes:
    - geoserver-data:/opt/geoserver/data_dir:rw
  geoserver-db:
    container_name: geoserver-db
    environment:
      ALLOW_IP_RANGE: 0.0.0.0/0
      POSTGRES_DB: gis,gwc
      POSTGRES_PASS: uAYMBz1hjSjlWGgc
      POSTGRES_USER: admin
    healthcheck:
      test: exit 0
    image: kartoza/postgis:14-3.1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 5434
      target: 5432
    restart: unless-stopped
    volumes:
    - geo-db-data:/var/lib/postgresql:rw
  heatmap-api:
    container_name: heatmap-api
    environment:
      HEATMAP_DB_ACCESS: user:PxRg90yqIflxfWt5@tcp(dashboarddb:3306)/heatmap?charset=utf8&parseTime=True
    image: disitlab/heatmap-api:v0
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8001
      target: 8080
    restart: unless-stopped
  heatmap2geosrv:
    container_name: heatmap2geosrv
    environment:
      GeoServer_password: uAYMBz1hjSjlWGgc
      GeoServer_url: http://geoserver:8080/geoserver/rest
      GeoServer_username: admin
      GeoServer_workspace: Snap4City
      MySQL_database: heatmap
      MySQL_hostname: dashboarddb
      MySQL_password: PxRg90yqIflxfWt5
      MySQL_username: user
      sleep_time: 20
    image: disitlab/heatmap2geoserver:v0
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    restart: unless-stopped
    volumes:
    - ./heatmap-tmp:/go/src/heatmap2geoserver/data:rw
  iot-discovery:
    container_name: iot-discovery
    image: disitlab/iot-directory-discover-api:v2
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 3003
      target: 3001
    restart: unless-stopped
    volumes:
    - ./iot-discovery-conf:/usr/src/snap4IotServer/snap4cityBroker/conf:rw
  iot-fiware-api:
    command: python3 API_ruleBuilder.py
    container_name: iot-fiware-api
    image: disitlab/iot-directory-fiware-harvester:v0
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 5000
      target: 5000
    restart: unless-stopped
    volumes:
    - ./iot-fiware-harvester-conf/Download:/Download:rw
    - ./iot-fiware-harvester-conf/Results:/Results:rw
    - ./iot-fiware-harvester-conf/config.json:/app/config.json:rw
    - ./iot-fiware-harvester-conf/dbconfig.json:/app/dbconfig.json:rw
  iot-fiware-harvester:
    container_name: iot-fiware-harvester
    environment:
      WAIT_TIME: 60m
    image: disitlab/iot-directory-fiware-harvester:v0
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    restart: unless-stopped
    volumes:
    - ./iot-fiware-harvester-conf/Download:/Download:rw
    - ./iot-fiware-harvester-conf/Results:/Results:rw
    - ./iot-fiware-harvester-conf/config.json:/app/config.json:rw
    - ./iot-fiware-harvester-conf/dbconfig.json:/app/dbconfig.json:rw
  iotapp-001:
    container_name: iotapp-001
    image: disitlab/snap4city-nodered-v2.2.2-adv:v10
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 1880
      target: 1880
    restart: unless-stopped
    volumes:
    - ./iotapp-001:/data:rw
  iotapp-002:
    container_name: iotapp-002
    image: disitlab/snap4city-nodered-v2.2.2-adv:v10
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 1881
      target: 1880
    restart: unless-stopped
    volumes:
    - ./iotapp-002:/data:rw
  iotapp-003:
    container_name: iotapp-003
    image: disitlab/snap4city-nodered-v2.2.2-adv:v10
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 1882
      target: 1880
    restart: unless-stopped
    volumes:
    - ./iotapp-003:/data:rw
  kafka:
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      JMX_PORT: '9000'
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092
      KAFKA_CFG_LISTENERS: CLIENT://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ENABLE_KRAFT: "no"
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_JMX_OPTS: -Djava.rmi.server.hostname=192.168.1.119 -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.port=9000 -Dcom.sun.management.jmxremote.rmi.port=9000
        -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
    image: bitnami/kafka:latest
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 9000
      target: 9000
    - published: 9092
      target: 9092
    - published: 9093
      target: 9093
    volumes:
    - kafka:/bitnami/kafka:rw
  keycloak:
    command:
    - -Djboss.socket.binding.port-offset=8
    container_name: keycloak
    depends_on:
      ldap-server:
        condition: service_started
    environment:
      KEYCLOAK_PASSWORD: CvxqySo2R7G41lKm
      KEYCLOAK_USER: admin
      PROXY_ADDRESS_FORWARDING: "true"
    image: disitlab/preconf-keycloak:v6
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8088
      target: 8088
    restart: unless-stopped
    volumes:
    - keycloak:/opt/jboss/keycloak/standalone:rw
  ldap-server:
    command:
    - bash
    - /ldif_files/run.sh
    container_name: ldap-server
    environment:
      LDAP_ADMIN_PASSWORD: WJOAmk6DMcC2CSka
      LDAP_DOMAIN: ldap.organization.com
      LDAP_ORGANISATION: organization
    image: disitlab/preconf-openldap:v3
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 389
      target: 389
    - published: 636
      target: 636
    restart: unless-stopped
    volumes:
    - ldap_etc:/etc/ldap/slapd.d:rw
    - ./ldap:/ldif_files:rw
    - ldap_lib:/var/lib/ldap:rw
  mongo-001:
    container_name: mongo-001
    image: mongo:3.6
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 27017
      target: 27017
    restart: unless-stopped
    volumes:
    - mongodb-001:/data/db:rw
  myldap:
    container_name: myldap
    depends_on:
      ldap-server:
        condition: service_started
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap-server
    image: osixia/phpldapadmin
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 6443
      target: 443
    restart: unless-stopped
  nifi:
    container_name: nifi
    depends_on:
      varnish:
        condition: service_started
    environment:
      AUTH: tls
      KEYSTORE_PASSWORD: Wl4jTuOnG4wwxWk1
      KEYSTORE_PATH: /opt/nifi/nifi-current/conf/keystore.jks
      KEYSTORE_TYPE: JKS
      NIFI_CLUSTER_ADDRESS: 0.0.0.0
      NIFI_REMOTE_INPUT_HOST: 0.0.0.0
      NIFI_SECURITY_USER_AUTHORIZER: single-user-authorizer
      NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER: single-user-provider
      NIFI_SENSITIVE_PROPS_KEY: zrEh9m606PlKgyzd
      NIFI_WEB_HTTPS_HOST: 0.0.0.0
      NIFI_WEB_HTTPS_PORT: '9090'
      NIFI_WEB_PROXY_HOST: localhost, dashboard, dashboard:9090
      SINGLE_USER_CREDENTIALS_PASSWORD: sB83KKdUFkfuBkoc
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      TRUSTSTORE_PASSWORD: EaUfQMpw9jt12wJs
      TRUSTSTORE_PATH: /opt/nifi/nifi-current/conf/truststore.jks
      TRUSTSTORE_TYPE: JKS
    image: apache/nifi:1.16.2
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 1030
      target: 1030
    - published: 9090
      target: 9090
    restart: unless-stopped
    volumes:
    - ./nifi/conf:/opt/nifi/nifi-current/conf:rw
    - ./nifi/extensions:/opt/nifi/nifi-current/extensions:rw
    - ./nifi/logs:/opt/nifi/nifi-current/logs:rw
  od-build-api:
    command: python -u ./od-build.py
    container_name: od-build-api
    image: disitlab/od-matrix-api:v1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 3000
      target: 3000
    restart: unless-stopped
    volumes:
    - ./od-matrix-conf/config.yaml:/usr/src/app/config.yaml:rw
  od-get-api:
    command: python -u ./od-get.py
    container_name: od-get-api
    image: disitlab/od-matrix-api:v1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 3200
      target: 3200
    restart: unless-stopped
    volumes:
    - ./od-matrix-conf/config.yaml:/usr/src/app/config.yaml:rw
  od-insert-api:
    command: python -u ./od-insert.py
    container_name: od-insert-api
    image: disitlab/od-matrix-api:v1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 3100
      target: 3100
    restart: unless-stopped
    volumes:
    - ./od-matrix-conf/config.yaml:/usr/src/app/config.yaml:rw
  od-postgis:
    container_name: od-postgis
    environment:
      POSTGRES_PASSWORD: AvwtHG6fVDtlsQ3J
    image: postgis/postgis:latest
    ports:
    - published: 5432
      target: 5432
    restart: unless-stopped
    volumes:
    - ./od-postgis/od-matrix-db-schema.sql:/docker-entrypoint-initdb.d/20-od-matrix-db-schema.sql:rw
    - ./od-postgis/italy_rx.sql:/docker-entrypoint-initdb.d/30-italy_rx.sql:rw
    - ./od-postgis:/od-postgis:rw
    - od-postgis-data:/var/lib/postgresql/data:rw
  opensearch-dashboards:
    container_name: opensearch-dashboards
    depends_on:
      opensearch-n1:
        condition: service_started
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-n1:9200"]'
      OPENSEARCH_PASSWORD: qws9N6mcc6txoZ1X
      OPENSEARCH_USER: kibanaserver
      SERVER_BASEPATH: /kibana
      SERVER_REWRITEBASEPATH: "false"
    image: opensearchproject/opensearch-dashboards:1.2.0
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 5601
      target: 5601
    restart: unless-stopped
    volumes:
    - ./opensearch-conf/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml:rw
  opensearch-n1:
    container_name: opensearch-n1
    environment:
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      JAVA_HOME: /usr/share/opensearch/jdk
      discovery.type: single-node
      network.host: 0.0.0.0
    image: opensearchproject/opensearch:1.2.3
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 9200
      target: 9200
    restart: unless-stopped
    volumes:
    - ./opensearch-conf/admin-key.pem:/usr/share/opensearch/config/admin-key.pem:rw
    - ./opensearch-conf/admin.pem:/usr/share/opensearch/config/admin.pem:rw
    - ./opensearch-conf/node1-key.pem:/usr/share/opensearch/config/esnode-key.pem:rw
    - ./opensearch-conf/node1.pem:/usr/share/opensearch/config/esnode.pem:rw
    - ./opensearch-conf/opensearch.yml:/usr/share/opensearch/config/opensearch.yml:rw
    - ./opensearch-conf/root-ca.pem:/usr/share/opensearch/config/root-ca.pem:rw
    - opensearch-data:/usr/share/opensearch/data:rw
    - ./opensearch-conf/action_groups.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/action_groups.yml:rw
    - ./opensearch-conf/security-config.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/config.yml:rw
    - ./opensearch-conf/internal_users.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml:rw
    - ./opensearch-conf/roles.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/roles.yml:rw
    - ./opensearch-conf/roles_mapping.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/roles_mapping.yml:rw
    - ./opensearch-conf/tenants.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/tenants.yml:rw
  orion-001:
    command: -dbhost mongo-001
    container_name: orion-001
    depends_on:
      mongo-001:
        condition: service_started
    image: fiware/orion
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 1026
      target: 1026
    restart: unless-stopped
  orionbrokerfilter-001:
    container_name: orionbrokerfilter-001
    depends_on:
      orion-001:
        condition: service_started
    environment:
      JAVA_OPTS: -DlogFileFolder=/usr/local/tomcat/logs -Dmytruststorepass=password
        -Dmykeystorepass=password
      connection.max: '100'
      connection.timeout: '10000'
      multitenancy: "false"
      spring.context_broker_name: orion-1
      spring.delegation_endpoint: http://dashboard/datamanager/api
      spring.elapsingcache.minutes: '3'
      spring.openidconnect.clientid: orionfilter
      spring.openidconnect.password: Sl9.wrE@k
      spring.openidconnect.token_endpoint: http://dashboard/auth/realms/master/protocol/openid-connect/token
      spring.openidconnect.username: userrootadmin
      spring.organization: Organization
      spring.orionbroker_endpoint: http://orion-001:1026
      spring.ownership_endpoint: http://dashboard/ownership-api/v1/list
      spring.prefix_serviceuri: http://www.disit.org/km4city/resource/iot
      spring.prefixelementID: Organization:orion-1
      spring.profiles.active: deploy
    image: disitlab/orionbrokerfilter:v6
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8443
      target: 8443
    restart: unless-stopped
    volumes:
    - ./orionbrokerfilter-001-conf:/usr/local/tomcat/credentials:rw
    - ./orionbrokerfilter-001-logs:/usr/local/tomcat/logs/orionbrokerfilter:rw
  personaldata:
    container_name: personaldata
    depends_on:
      dashboarddb:
        condition: service_started
      keycloak:
        condition: service_started
    environment:
      JAVA_OPTS: -DlogFileFolder=/usr/local/tomcat/logs
      config.grp.authentication.clientid: js-grp-client
      config.kpi.authentication.clientid: js-kpi-client
      config.kpi.defaultsaveon: ElasticSearch
      config.kpi.dictionary: http://dashboard/processloader/api/dictionary/
      config.kpi.organizationlist: '["Organization"]'
      config.kpi.orginfourl: http://dashboard/dashboardSmartCity/api/getOrganizationParams.php
      elasticsearch.clustername: na
      elasticsearch.hosts: opensearch-n1
      elasticsearch.indexname: snap4-kpi
      elasticsearch.kibanaDashboardUrl: http://dashboard/kibana/app/dashboards?security_tenant=global#/view/264dd3d0-23f0-11eb-9e9d-e5f981c2aab7?_a=(filters:!(),query:(language:lucene,query:'deviceName:KPI_ID'))
      elasticsearch.kibanahost: http://dashboard/kibana
      elasticsearch.password: PtsvMhgJmWoHHiav
      elasticsearch.port: '9200'
      elasticsearch.protocol: https
      elasticsearch.truststorefile: /datamanager-conf/trust-store.p12
      elasticsearch.truststorepass: EaUfQMpw9jt12wJs
      elasticsearch.username: admin
      grp.url: http://dashboard/datamanager/grp/?id=%d
      grpsensors.datasource.url: http://dashboard/dashboardSmartCity/api/sensors.php
      kafka.bootstrapAddress: kafka:9092
      kafka.prefixTopic: kpi-
      kafka.sendMessages: "true"
      logFileFolder: ''
      profiledb.datasource.password: PxRg90yqIflxfWt5
      profiledb.datasource.url: jdbc:mysql://dashboarddb:3306/profiledb
      profiledb.datasource.username: user
      security.encryptor.aes.ivparameter: IVKeyivKey123456
      security.encryptor.aes.secretkey: EncryptionIniKey
      spring.ldap.basicdn: dc=ldap,dc=organization,dc=com
      spring.ldap.managerdn: cn=admin,dc=ldap,dc=organization,dc=com
      spring.ldap.password: WJOAmk6DMcC2CSka
      spring.ldap.url: ldap://ldap-server:389
      spring.openidconnect.userinfo_endpoint: http://dashboard/auth/
      spring.openidconnect.userinfo_endpoint_test: ''
      spring.profiles.active: deploy
    image: disitlab/personaldata:v5
    links:
    - dashboarddb
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8080
      target: 8080
    restart: unless-stopped
    volumes:
    - ./datamanager-conf:/datamanager-conf:rw
    - ./datamanager-logs:/usr/local/tomcat/logs/datamanager:rw
  proxy:
    container_name: proxy
    image: nginxinc/nginx-unprivileged
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    networks:
      default:
        aliases:
        - dashboard
    ports:
    - published: 80
      target: 80
    - published: 443
      target: 443
    restart: unless-stopped
    sysctls:
      net.ipv4.ip_unprivileged_port_start: '0'
    user: '1000'
    volumes:
    - ./certbot/conf:/etc/letsencrypt:rw
    - ./nginx-proxy-conf:/etc/nginx/conf.d:rw
    - ./certbot/www:/var/www/certbot:rw
  servicemap:
    container_name: servicemap
    depends_on:
      dashboarddb:
        condition: service_started
      virtuoso-kb:
        condition: service_started
    image: disitlab/servicemap:v5.1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8090
      target: 8080
    restart: unless-stopped
    volumes:
    - ./servicemap-iot-conf:/root/iot-api-config:rw
    - ./servicemap-iot-conf/logs:/root/iot-log2:rw
    - ./servicemap-conf:/root/servicemap:rw
    - ./servicemap-conf/cacerts:/usr/local/openjdk-8/jre/lib/security/cacerts:rw
    - ./servicemap-conf/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml:rw
    - ./servicemap-superservicemap-conf/settings.xml:/usr/local/tomcat/settings.xml:rw
  solr-kb:
    command:
    - solr-precreate
    - km4c-index
    container_name: solr-kb
    image: solr:6.6.6
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 8983
      target: 8983
    restart: unless-stopped
    volumes:
    - solr-data:/var/solr:rw
  synoptics:
    container_name: synoptics
    image: disitlab/synoptics:v2
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 3001
      target: 3001
    - published: 3002
      target: 3002
    restart: unless-stopped
    volumes:
    - ./synoptics-conf/config.js:/usr/src/synoptics/new-config.js:rw
    - ./synoptics-conf/v2-config.js:/usr/src/synoptics/v2/new-config.js:rw
  varnish:
    container_name: varnish
    entrypoint: /root/custom-varnish-entrypoint
    environment:
      VARNISHNCSA: "true"
      VARNISH_HTTP_PORTS: '6081'
      VARNISH_SIZE: 100MB
    hostname: cache
    image: varnish:stable
    ports:
    - published: 6081
      target: 6081
    restart: unless-stopped
    tmpfs:
    - /var/lib/varnish:exec
    volumes:
    - ./varnish/varnish-conf/default.vcl:/etc/varnish/default.vcl:ro
    - ./varnish/docker-entrypoint:/root/custom-varnish-entrypoint:rw
    - ./varnish/logs:/root/logs:rw
    - ./varnish/varnishncsa-conf/format:/root/varnishncsa_format:ro
  virtuoso-kb:
    container_name: virtuoso-kb
    environment:
      DBA_PASSWORD: SzsBcw0clsSfv3rP
      DEFAULT_GRAPH: http://www.example.com/my-graph
      SPARQL_UPDATE: "true"
    image: tenforce/virtuoso:1.3.1-virtuoso7.2.1
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 1111
      target: 1111
    - published: 8890
      target: 8890
    restart: unless-stopped
    volumes:
    - virtuoso:/data:rw
    - ./servicemap-conf:/root/servicemap:rw
  wsserver:
    container_name: wsserver
    depends_on:
      dashboarddb:
        condition: service_started
      keycloak:
        condition: service_started
    image: disitlab/websocketserver:v5
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 9100
      target: 8000
    restart: unless-stopped
    volumes:
    - ./dashboard-builder-conf:/websocketserver/conf:rw
  zookeeper:
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 100m
    ports:
    - published: 2181
      target: 2181
    restart: unless-stopped
    volumes:
    - zkdata:/bitnami/zookeeper:rw
version: '3.2'
volumes:
  dashboard-img: {}
  dashboarddb: {}
  datatable-uploads: {}
  elastic-data: {}
  geo-db-data: {}
  geoserver-data: {}
  kafka: {}
  keycloak: {}
  ldap_etc: {}
  ldap_lib: {}
  mongodb-001: {}
  od-postgis-data: {}
  opensearch-data: {}
  poitable-uploads: {}
  solr-data: {}
  virtuoso: {}
  zkdata: {}